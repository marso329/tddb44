
a.out:     file format elf64-x86-64


Disassembly of section .init:

00000000000005b8 <_init>:
 5b8:	48 83 ec 08          	sub    $0x8,%rsp
 5bc:	48 8b 05 25 0a 20 00 	mov    0x200a25(%rip),%rax        # 200fe8 <__gmon_start__>
 5c3:	48 85 c0             	test   %rax,%rax
 5c6:	74 02                	je     5ca <_init+0x12>
 5c8:	ff d0                	callq  *%rax
 5ca:	48 83 c4 08          	add    $0x8,%rsp
 5ce:	c3                   	retq   

Disassembly of section .plt:

00000000000005d0 <.plt>:
 5d0:	ff 35 da 09 20 00    	pushq  0x2009da(%rip)        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
 5d6:	ff 25 dc 09 20 00    	jmpq   *0x2009dc(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
 5dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005e0 <_IO_putc@plt>:
 5e0:	ff 25 da 09 20 00    	jmpq   *0x2009da(%rip)        # 200fc0 <_IO_putc@GLIBC_2.2.5>
 5e6:	68 00 00 00 00       	pushq  $0x0
 5eb:	e9 e0 ff ff ff       	jmpq   5d0 <.plt>

00000000000005f0 <getchar@plt>:
 5f0:	ff 25 d2 09 20 00    	jmpq   *0x2009d2(%rip)        # 200fc8 <getchar@GLIBC_2.2.5>
 5f6:	68 01 00 00 00       	pushq  $0x1
 5fb:	e9 d0 ff ff ff       	jmpq   5d0 <.plt>

0000000000000600 <fflush@plt>:
 600:	ff 25 ca 09 20 00    	jmpq   *0x2009ca(%rip)        # 200fd0 <fflush@GLIBC_2.2.5>
 606:	68 02 00 00 00       	pushq  $0x2
 60b:	e9 c0 ff ff ff       	jmpq   5d0 <.plt>

Disassembly of section .plt.got:

0000000000000610 <__cxa_finalize@plt>:
 610:	ff 25 e2 09 20 00    	jmpq   *0x2009e2(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 616:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000620 <_start>:
 620:	31 ed                	xor    %ebp,%ebp
 622:	49 89 d1             	mov    %rdx,%r9
 625:	5e                   	pop    %rsi
 626:	48 89 e2             	mov    %rsp,%rdx
 629:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 62d:	50                   	push   %rax
 62e:	54                   	push   %rsp
 62f:	4c 8d 05 5a 04 00 00 	lea    0x45a(%rip),%r8        # a90 <__libc_csu_fini>
 636:	48 8d 0d e3 03 00 00 	lea    0x3e3(%rip),%rcx        # a20 <__libc_csu_init>
 63d:	48 8d 3d ec 00 00 00 	lea    0xec(%rip),%rdi        # 730 <main>
 644:	ff 15 96 09 20 00    	callq  *0x200996(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 64a:	f4                   	hlt    
 64b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000650 <deregister_tm_clones>:
 650:	48 8d 3d b9 09 20 00 	lea    0x2009b9(%rip),%rdi        # 201010 <stdout@@GLIBC_2.2.5>
 657:	55                   	push   %rbp
 658:	48 8d 05 b1 09 20 00 	lea    0x2009b1(%rip),%rax        # 201010 <stdout@@GLIBC_2.2.5>
 65f:	48 39 f8             	cmp    %rdi,%rax
 662:	48 89 e5             	mov    %rsp,%rbp
 665:	74 19                	je     680 <deregister_tm_clones+0x30>
 667:	48 8b 05 6a 09 20 00 	mov    0x20096a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 66e:	48 85 c0             	test   %rax,%rax
 671:	74 0d                	je     680 <deregister_tm_clones+0x30>
 673:	5d                   	pop    %rbp
 674:	ff e0                	jmpq   *%rax
 676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 67d:	00 00 00 
 680:	5d                   	pop    %rbp
 681:	c3                   	retq   
 682:	0f 1f 40 00          	nopl   0x0(%rax)
 686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 68d:	00 00 00 

0000000000000690 <register_tm_clones>:
 690:	48 8d 3d 79 09 20 00 	lea    0x200979(%rip),%rdi        # 201010 <stdout@@GLIBC_2.2.5>
 697:	48 8d 35 72 09 20 00 	lea    0x200972(%rip),%rsi        # 201010 <stdout@@GLIBC_2.2.5>
 69e:	55                   	push   %rbp
 69f:	48 29 fe             	sub    %rdi,%rsi
 6a2:	48 89 e5             	mov    %rsp,%rbp
 6a5:	48 c1 fe 03          	sar    $0x3,%rsi
 6a9:	48 89 f0             	mov    %rsi,%rax
 6ac:	48 c1 e8 3f          	shr    $0x3f,%rax
 6b0:	48 01 c6             	add    %rax,%rsi
 6b3:	48 d1 fe             	sar    %rsi
 6b6:	74 18                	je     6d0 <register_tm_clones+0x40>
 6b8:	48 8b 05 31 09 20 00 	mov    0x200931(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 6bf:	48 85 c0             	test   %rax,%rax
 6c2:	74 0c                	je     6d0 <register_tm_clones+0x40>
 6c4:	5d                   	pop    %rbp
 6c5:	ff e0                	jmpq   *%rax
 6c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6ce:	00 00 
 6d0:	5d                   	pop    %rbp
 6d1:	c3                   	retq   
 6d2:	0f 1f 40 00          	nopl   0x0(%rax)
 6d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6dd:	00 00 00 

00000000000006e0 <__do_global_dtors_aux>:
 6e0:	80 3d 31 09 20 00 00 	cmpb   $0x0,0x200931(%rip)        # 201018 <completed.7632>
 6e7:	75 2f                	jne    718 <__do_global_dtors_aux+0x38>
 6e9:	48 83 3d 07 09 20 00 	cmpq   $0x0,0x200907(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 6f0:	00 
 6f1:	55                   	push   %rbp
 6f2:	48 89 e5             	mov    %rsp,%rbp
 6f5:	74 0c                	je     703 <__do_global_dtors_aux+0x23>
 6f7:	48 8b 3d 0a 09 20 00 	mov    0x20090a(%rip),%rdi        # 201008 <__dso_handle>
 6fe:	e8 0d ff ff ff       	callq  610 <__cxa_finalize@plt>
 703:	e8 48 ff ff ff       	callq  650 <deregister_tm_clones>
 708:	c6 05 09 09 20 00 01 	movb   $0x1,0x200909(%rip)        # 201018 <completed.7632>
 70f:	5d                   	pop    %rbp
 710:	c3                   	retq   
 711:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 718:	f3 c3                	repz retq 
 71a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000720 <frame_dummy>:
 720:	55                   	push   %rbp
 721:	48 89 e5             	mov    %rsp,%rbp
 724:	5d                   	pop    %rbp
 725:	e9 66 ff ff ff       	jmpq   690 <register_tm_clones>
 72a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000730 <main>:
 730:	c8 08 00 00          	enterq $0x8,$0x0
 734:	d9 7d f8             	fnstcw -0x8(%rbp)
 737:	66 81 4d f8 00 0c    	orw    $0xc00,-0x8(%rbp)
 73d:	d9 6d f8             	fldcw  -0x8(%rbp)
 740:	c9                   	leaveq 
 741:	c8 00 00 00          	enterq $0x0,$0x0
 745:	e8 2a 00 00 00       	callq  774 <L3>
 74a:	c9                   	leaveq 
 74b:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
 752:	c3                   	retq   

0000000000000753 <L0>:
 753:	e8 00 00 00 00       	callq  758 <L0+0x5>
 758:	c3                   	retq   

0000000000000759 <L1>:
 759:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
 75e:	e8 7d 02 00 00       	callq  9e0 <myputchar>
 763:	c3                   	retq   

0000000000000764 <L2>:
 764:	c8 08 00 00          	enterq $0x8,$0x0
 768:	dd 45 10             	fldl   0x10(%rbp)
 76b:	df 7d f8             	fistpll -0x8(%rbp)
 76e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 772:	c9                   	leaveq 
 773:	c3                   	retq   

0000000000000774 <L3>:
 774:	55                   	push   %rbp
 775:	48 89 e1             	mov    %rsp,%rcx
 778:	51                   	push   %rcx
 779:	48 89 cd             	mov    %rcx,%rbp
 77c:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
 783:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
 78a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 78e:	48 89 41 20          	mov    %rax,0x20(%rcx)
 792:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 796:	48 8b 81 00 01 00 00 	mov    0x100(%rcx),%rax
 79d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7a1:	48 89 01             	mov    %rax,(%rcx)
 7a4:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 7ab:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7af:	48 89 41 28          	mov    %rax,0x28(%rcx)
 7b3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7b7:	48 8b 01             	mov    (%rcx),%rax
 7ba:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7be:	48 8b 89 40 01 00 00 	mov    0x140(%rcx),%rcx
 7c5:	48 01 c8             	add    %rcx,%rax
 7c8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7cc:	48 89 41 30          	mov    %rax,0x30(%rcx)
 7d0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7d4:	48 8b 81 80 01 00 00 	mov    0x180(%rcx),%rax
 7db:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7df:	48 89 41 08          	mov    %rax,0x8(%rcx)
 7e3:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax
 7ea:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7ee:	48 89 41 38          	mov    %rax,0x38(%rcx)
 7f2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7f6:	48 8b 81 c0 01 00 00 	mov    0x1c0(%rcx),%rax
 7fd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 801:	48 89 41 10          	mov    %rax,0x10(%rcx)
 805:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 80c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 810:	48 89 41 40          	mov    %rax,0x40(%rcx)
 814:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 818:	df 69 40             	fildll 0x40(%rcx)
 81b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 81f:	dd 59 48             	fstpl  0x48(%rcx)
 822:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 826:	dd 41 10             	fldl   0x10(%rcx)
 829:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 82d:	dd 41 48             	fldl   0x48(%rcx)
 830:	de c1                	faddp  %st,%st(1)
 832:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 836:	dd 59 50             	fstpl  0x50(%rcx)
 839:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 83d:	48 8b 81 80 02 00 00 	mov    0x280(%rcx),%rax
 844:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 848:	48 89 41 18          	mov    %rax,0x18(%rcx)
 84c:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
 853:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 857:	48 89 41 58          	mov    %rax,0x58(%rcx)
 85b:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
 862:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 866:	48 89 41 60          	mov    %rax,0x60(%rcx)
 86a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 86e:	48 8b 81 c0 02 00 00 	mov    0x2c0(%rcx),%rax
 875:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 879:	48 8b 89 00 03 00 00 	mov    0x300(%rcx),%rcx
 880:	48 39 c8             	cmp    %rcx,%rax
 883:	7c 09                	jl     88e <L9>
 885:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
 88c:	eb 07                	jmp    895 <L10>

000000000000088e <L9>:
 88e:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax

0000000000000895 <L10>:
 895:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 899:	48 89 41 68          	mov    %rax,0x68(%rcx)
 89d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8a1:	48 8b 81 40 03 00 00 	mov    0x340(%rcx),%rax
 8a8:	48 83 f8 00          	cmp    $0x0,%rax
 8ac:	74 41                	je     8ef <L5>
 8ae:	48 c7 c0 05 00 00 00 	mov    $0x5,%rax
 8b5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8b9:	48 89 41 70          	mov    %rax,0x70(%rcx)
 8bd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8c1:	48 8b 41 40          	mov    0x40(%rcx),%rax
 8c5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8c9:	48 8b 89 80 03 00 00 	mov    0x380(%rcx),%rcx
 8d0:	48 01 c8             	add    %rcx,%rax
 8d3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8d7:	48 89 41 78          	mov    %rax,0x78(%rcx)
 8db:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8df:	48 8b 81 c0 03 00 00 	mov    0x3c0(%rcx),%rax
 8e6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8ea:	48 89 01             	mov    %rax,(%rcx)
 8ed:	eb 00                	jmp    8ef <L5>

00000000000008ef <L5>:
 8ef:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 8f6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 8fa:	48 89 81 80 00 00 00 	mov    %rax,0x80(%rcx)
 901:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 908:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 90c:	48 89 81 88 00 00 00 	mov    %rax,0x88(%rcx)
 913:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 917:	48 8b 81 40 04 00 00 	mov    0x440(%rcx),%rax
 91e:	48 f7 d8             	neg    %rax
 921:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 925:	48 89 81 90 00 00 00 	mov    %rax,0x90(%rcx)
 92c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 930:	df a9 90 00 00 00    	fildll 0x90(%rcx)
 936:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 93a:	dd 99 98 00 00 00    	fstpl  0x98(%rcx)
 940:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 944:	dd 81 98 00 00 00    	fldl   0x98(%rcx)
 94a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 94e:	dd 81 80 00 00 00    	fldl   0x80(%rcx)
 954:	df f1                	fcomip %st(1),%st
 956:	dd d8                	fstp   %st(0)
 958:	77 09                	ja     963 <L11>
 95a:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
 961:	eb 07                	jmp    96a <L12>

0000000000000963 <L11>:
 963:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax

000000000000096a <L12>:
 96a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 96e:	48 89 81 a0 00 00 00 	mov    %rax,0xa0(%rcx)
 975:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 979:	48 8b 81 00 05 00 00 	mov    0x500(%rcx),%rax
 980:	48 83 f8 00          	cmp    $0x0,%rax
 984:	74 58                	je     9de <L4>
 986:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 98d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 991:	48 89 81 a8 00 00 00 	mov    %rax,0xa8(%rcx)
 998:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 99c:	df a9 a8 00 00 00    	fildll 0xa8(%rcx)
 9a2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 9a6:	dd 99 b0 00 00 00    	fstpl  0xb0(%rcx)
 9ac:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 9b0:	dd 41 18             	fldl   0x18(%rcx)
 9b3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 9b7:	dd 81 b0 00 00 00    	fldl   0xb0(%rcx)
 9bd:	de c1                	faddp  %st,%st(1)
 9bf:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 9c3:	dd 99 b8 00 00 00    	fstpl  0xb8(%rcx)
 9c9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 9cd:	48 8b 81 c0 05 00 00 	mov    0x5c0(%rcx),%rax
 9d4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 9d8:	48 89 41 18          	mov    %rax,0x18(%rcx)
 9dc:	eb 00                	jmp    9de <L4>

00000000000009de <L4>:
 9de:	c9                   	leaveq 
 9df:	c3                   	retq   

00000000000009e0 <myputchar>:
 9e0:	55                   	push   %rbp
 9e1:	48 89 e5             	mov    %rsp,%rbp
 9e4:	48 83 ec 10          	sub    $0x10,%rsp
 9e8:	89 7d fc             	mov    %edi,-0x4(%rbp)
 9eb:	48 8b 15 1e 06 20 00 	mov    0x20061e(%rip),%rdx        # 201010 <stdout@@GLIBC_2.2.5>
 9f2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 9f5:	48 89 d6             	mov    %rdx,%rsi
 9f8:	89 c7                	mov    %eax,%edi
 9fa:	e8 e1 fb ff ff       	callq  5e0 <_IO_putc@plt>
 9ff:	48 8b 05 0a 06 20 00 	mov    0x20060a(%rip),%rax        # 201010 <stdout@@GLIBC_2.2.5>
 a06:	48 89 c7             	mov    %rax,%rdi
 a09:	e8 f2 fb ff ff       	callq  600 <fflush@plt>
 a0e:	90                   	nop
 a0f:	c9                   	leaveq 
 a10:	c3                   	retq   
 a11:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 a18:	00 00 00 
 a1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000a20 <__libc_csu_init>:
 a20:	41 57                	push   %r15
 a22:	41 56                	push   %r14
 a24:	41 89 ff             	mov    %edi,%r15d
 a27:	41 55                	push   %r13
 a29:	41 54                	push   %r12
 a2b:	4c 8d 25 66 03 20 00 	lea    0x200366(%rip),%r12        # 200d98 <__frame_dummy_init_array_entry>
 a32:	55                   	push   %rbp
 a33:	48 8d 2d 66 03 20 00 	lea    0x200366(%rip),%rbp        # 200da0 <__init_array_end>
 a3a:	53                   	push   %rbx
 a3b:	49 89 f6             	mov    %rsi,%r14
 a3e:	49 89 d5             	mov    %rdx,%r13
 a41:	4c 29 e5             	sub    %r12,%rbp
 a44:	48 83 ec 08          	sub    $0x8,%rsp
 a48:	48 c1 fd 03          	sar    $0x3,%rbp
 a4c:	e8 67 fb ff ff       	callq  5b8 <_init>
 a51:	48 85 ed             	test   %rbp,%rbp
 a54:	74 20                	je     a76 <__libc_csu_init+0x56>
 a56:	31 db                	xor    %ebx,%ebx
 a58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 a5f:	00 
 a60:	4c 89 ea             	mov    %r13,%rdx
 a63:	4c 89 f6             	mov    %r14,%rsi
 a66:	44 89 ff             	mov    %r15d,%edi
 a69:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 a6d:	48 83 c3 01          	add    $0x1,%rbx
 a71:	48 39 dd             	cmp    %rbx,%rbp
 a74:	75 ea                	jne    a60 <__libc_csu_init+0x40>
 a76:	48 83 c4 08          	add    $0x8,%rsp
 a7a:	5b                   	pop    %rbx
 a7b:	5d                   	pop    %rbp
 a7c:	41 5c                	pop    %r12
 a7e:	41 5d                	pop    %r13
 a80:	41 5e                	pop    %r14
 a82:	41 5f                	pop    %r15
 a84:	c3                   	retq   
 a85:	90                   	nop
 a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 a8d:	00 00 00 

0000000000000a90 <__libc_csu_fini>:
 a90:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000a94 <_fini>:
 a94:	48 83 ec 08          	sub    $0x8,%rsp
 a98:	48 83 c4 08          	add    $0x8,%rsp
 a9c:	c3                   	retq   
